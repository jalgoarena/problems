// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/problems.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProblemRequest struct {
	ProblemId            string   `protobuf:"bytes,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemRequest) Reset()         { *m = ProblemRequest{} }
func (m *ProblemRequest) String() string { return proto.CompactTextString(m) }
func (*ProblemRequest) ProtoMessage()    {}
func (*ProblemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d252b13be670059d, []int{0}
}

func (m *ProblemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemRequest.Unmarshal(m, b)
}
func (m *ProblemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemRequest.Marshal(b, m, deterministic)
}
func (m *ProblemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemRequest.Merge(m, src)
}
func (m *ProblemRequest) XXX_Size() int {
	return xxx_messageInfo_ProblemRequest.Size(m)
}
func (m *ProblemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemRequest proto.InternalMessageInfo

func (m *ProblemRequest) GetProblemId() string {
	if m != nil {
		return m.ProblemId
	}
	return ""
}

type ProblemResponse struct {
	Problem              *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemResponse) Reset()         { *m = ProblemResponse{} }
func (m *ProblemResponse) String() string { return proto.CompactTextString(m) }
func (*ProblemResponse) ProtoMessage()    {}
func (*ProblemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d252b13be670059d, []int{1}
}

func (m *ProblemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemResponse.Unmarshal(m, b)
}
func (m *ProblemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemResponse.Marshal(b, m, deterministic)
}
func (m *ProblemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemResponse.Merge(m, src)
}
func (m *ProblemResponse) XXX_Size() int {
	return xxx_messageInfo_ProblemResponse.Size(m)
}
func (m *ProblemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemResponse proto.InternalMessageInfo

func (m *ProblemResponse) GetProblem() *Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

type ProblemsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemsRequest) Reset()         { *m = ProblemsRequest{} }
func (m *ProblemsRequest) String() string { return proto.CompactTextString(m) }
func (*ProblemsRequest) ProtoMessage()    {}
func (*ProblemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d252b13be670059d, []int{2}
}

func (m *ProblemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemsRequest.Unmarshal(m, b)
}
func (m *ProblemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemsRequest.Marshal(b, m, deterministic)
}
func (m *ProblemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemsRequest.Merge(m, src)
}
func (m *ProblemsRequest) XXX_Size() int {
	return xxx_messageInfo_ProblemsRequest.Size(m)
}
func (m *ProblemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemsRequest proto.InternalMessageInfo

type ProblemsResponse struct {
	Problems             string   `protobuf:"bytes,1,opt,name=problems,proto3" json:"problems,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemsResponse) Reset()         { *m = ProblemsResponse{} }
func (m *ProblemsResponse) String() string { return proto.CompactTextString(m) }
func (*ProblemsResponse) ProtoMessage()    {}
func (*ProblemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d252b13be670059d, []int{3}
}

func (m *ProblemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemsResponse.Unmarshal(m, b)
}
func (m *ProblemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemsResponse.Marshal(b, m, deterministic)
}
func (m *ProblemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemsResponse.Merge(m, src)
}
func (m *ProblemsResponse) XXX_Size() int {
	return xxx_messageInfo_ProblemsResponse.Size(m)
}
func (m *ProblemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemsResponse proto.InternalMessageInfo

func (m *ProblemsResponse) GetProblems() string {
	if m != nil {
		return m.Problems
	}
	return ""
}

type Problem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	TimeLimit            int64    `protobuf:"varint,4,opt,name=timeLimit,proto3" json:"timeLimit,omitempty"`
	Level                int32    `protobuf:"varint,5,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Problem) Reset()         { *m = Problem{} }
func (m *Problem) String() string { return proto.CompactTextString(m) }
func (*Problem) ProtoMessage()    {}
func (*Problem) Descriptor() ([]byte, []int) {
	return fileDescriptor_d252b13be670059d, []int{4}
}

func (m *Problem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Problem.Unmarshal(m, b)
}
func (m *Problem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Problem.Marshal(b, m, deterministic)
}
func (m *Problem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Problem.Merge(m, src)
}
func (m *Problem) XXX_Size() int {
	return xxx_messageInfo_Problem.Size(m)
}
func (m *Problem) XXX_DiscardUnknown() {
	xxx_messageInfo_Problem.DiscardUnknown(m)
}

var xxx_messageInfo_Problem proto.InternalMessageInfo

func (m *Problem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Problem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Problem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Problem) GetTimeLimit() int64 {
	if m != nil {
		return m.TimeLimit
	}
	return 0
}

func (m *Problem) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func init() {
	proto.RegisterType((*ProblemRequest)(nil), "pb.ProblemRequest")
	proto.RegisterType((*ProblemResponse)(nil), "pb.ProblemResponse")
	proto.RegisterType((*ProblemsRequest)(nil), "pb.ProblemsRequest")
	proto.RegisterType((*ProblemsResponse)(nil), "pb.ProblemsResponse")
	proto.RegisterType((*Problem)(nil), "pb.Problem")
}

func init() { proto.RegisterFile("pb/problems.proto", fileDescriptor_d252b13be670059d) }

var fileDescriptor_d252b13be670059d = []byte{
	// 275 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x91, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0x6d, 0xd7, 0xb5, 0xbb, 0x53, 0x5c, 0xdd, 0x71, 0x0f, 0xa5, 0x78, 0x28, 0x01, 0xa1,
	0xa7, 0x0a, 0x2b, 0x8a, 0x57, 0x3d, 0x08, 0x0b, 0x1e, 0xa4, 0xfe, 0x83, 0xda, 0x39, 0x04, 0xd2,
	0x26, 0x36, 0x51, 0xf0, 0xe2, 0xcd, 0xff, 0x2d, 0x6d, 0x92, 0xb6, 0x7b, 0x9c, 0x6f, 0xde, 0x9b,
	0x99, 0x97, 0xc0, 0x56, 0x55, 0xb7, 0xaa, 0x93, 0x95, 0xa0, 0x46, 0x17, 0xaa, 0x93, 0x46, 0x62,
	0xa8, 0x2a, 0x56, 0xc0, 0xe6, 0xcd, 0xd2, 0x92, 0x3e, 0xbf, 0x48, 0x1b, 0xbc, 0x86, 0xb5, 0xd3,
	0x1d, 0xea, 0x24, 0xc8, 0x82, 0x7c, 0x5d, 0x4e, 0x80, 0x3d, 0xc2, 0xc5, 0xa8, 0xd7, 0x4a, 0xb6,
	0x9a, 0xf0, 0x06, 0x22, 0xd7, 0x1f, 0xe4, 0xf1, 0x3e, 0x2e, 0x54, 0x55, 0x78, 0x95, 0xef, 0xb1,
	0xed, 0xe8, 0xd4, 0x6e, 0x15, 0x2b, 0xe0, 0x72, 0x42, 0x6e, 0x5a, 0x0a, 0x2b, 0x7f, 0xa6, 0xdb,
	0x3e, 0xd6, 0xec, 0x2f, 0x80, 0xc8, 0x19, 0x70, 0x03, 0x21, 0xf7, 0xf7, 0x85, 0xbc, 0xc6, 0x1d,
	0x2c, 0x0d, 0x37, 0x82, 0x92, 0x70, 0x40, 0xb6, 0xc0, 0x0c, 0xe2, 0x9a, 0xf4, 0x47, 0xc7, 0x95,
	0xe1, 0xb2, 0x4d, 0x16, 0x43, 0x6f, 0x8e, 0xfa, 0xb8, 0x86, 0x37, 0xf4, 0xca, 0x1b, 0x6e, 0x92,
	0xd3, 0x2c, 0xc8, 0x17, 0xe5, 0x04, 0xfa, 0xa9, 0x82, 0xbe, 0x49, 0x24, 0xcb, 0x2c, 0xc8, 0x97,
	0xa5, 0x2d, 0xf6, 0xbf, 0x70, 0xee, 0xef, 0x7e, 0x37, 0xb2, 0x23, 0xbc, 0x87, 0xd5, 0x0b, 0x6f,
	0xeb, 0xe7, 0x9f, 0x43, 0x8d, 0x38, 0x4f, 0x6f, 0x83, 0xa6, 0x57, 0x47, 0xcc, 0x26, 0x65, 0x27,
	0xf8, 0x00, 0x51, 0x6f, 0x7b, 0x12, 0x02, 0xe7, 0x0a, 0xff, 0x3e, 0xe9, 0xee, 0x18, 0x7a, 0x5f,
	0x75, 0x36, 0xfc, 0xdf, 0xdd, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x68, 0x8b, 0xe4, 0xae, 0xd4,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProblemsStoreClient is the client API for ProblemsStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProblemsStoreClient interface {
	FindById(ctx context.Context, in *ProblemRequest, opts ...grpc.CallOption) (*ProblemResponse, error)
	FindAll(ctx context.Context, in *ProblemsRequest, opts ...grpc.CallOption) (*ProblemsResponse, error)
}

type problemsStoreClient struct {
	cc *grpc.ClientConn
}

func NewProblemsStoreClient(cc *grpc.ClientConn) ProblemsStoreClient {
	return &problemsStoreClient{cc}
}

func (c *problemsStoreClient) FindById(ctx context.Context, in *ProblemRequest, opts ...grpc.CallOption) (*ProblemResponse, error) {
	out := new(ProblemResponse)
	err := c.cc.Invoke(ctx, "/pb.ProblemsStore/FindById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *problemsStoreClient) FindAll(ctx context.Context, in *ProblemsRequest, opts ...grpc.CallOption) (*ProblemsResponse, error) {
	out := new(ProblemsResponse)
	err := c.cc.Invoke(ctx, "/pb.ProblemsStore/FindAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProblemsStoreServer is the server API for ProblemsStore service.
type ProblemsStoreServer interface {
	FindById(context.Context, *ProblemRequest) (*ProblemResponse, error)
	FindAll(context.Context, *ProblemsRequest) (*ProblemsResponse, error)
}

func RegisterProblemsStoreServer(s *grpc.Server, srv ProblemsStoreServer) {
	s.RegisterService(&_ProblemsStore_serviceDesc, srv)
}

func _ProblemsStore_FindById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProblemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProblemsStoreServer).FindById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ProblemsStore/FindById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProblemsStoreServer).FindById(ctx, req.(*ProblemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProblemsStore_FindAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProblemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProblemsStoreServer).FindAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.ProblemsStore/FindAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProblemsStoreServer).FindAll(ctx, req.(*ProblemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProblemsStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.ProblemsStore",
	HandlerType: (*ProblemsStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindById",
			Handler:    _ProblemsStore_FindById_Handler,
		},
		{
			MethodName: "FindAll",
			Handler:    _ProblemsStore_FindAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/problems.proto",
}
